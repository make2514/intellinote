buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.1.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
    baseName = 'gs-accessing-data-mysql'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")

    // JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Use MySQL Connector-J
    compile 'mysql:mysql-connector-java'

    testCompile('org.springframework.boot:spring-boot-starter-test')

    // from spring web tutorials: https://spring.io/guides/gs/serving-web-content/
    compile("org.springframework.boot:spring-boot-devtools")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compileOnly group: 'org.eclipse.jetty', name: 'jetty-runner', version: '9.4.9.v20180320'

}

//Include the jetty runner into the build/server folder
task copyToLib(type: Copy) {
    into "$buildDir/server"				//Default $buildDir is build/
    from(configurations.compileOnly) {	//Note the use of the name of dependency 
        include "jetty-runner*"			// configuration "compileOnly"
        rename { String fileName -> 		//Forget the version # from filename
"jetty-runner.jar"   
        }
    }
}

//Add to task stage that Heroku to prepare deployment
task stage {
    dependsOn clean, copyToLib 
}