buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.1.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
    baseName = 'intellinote'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    dev
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    
    compile("org.springframework.boot:spring-boot-starter-security")

    // JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Use MySQL Connector-J
    compile 'mysql:mysql-connector-java'

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('com.h2database:h2')

    // from spring web tutorials: https://spring.io/guides/gs/serving-web-content/
    compile("org.springframework.boot:spring-boot-devtools")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compileOnly group: 'org.eclipse.jetty', name: 'jetty-runner', version: '9.4.9.v20180320'

    //JSON
    compile group: 'org.json', name: 'json', version: '20180130'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.3'

    //Natural language api
    compile 'com.google.cloud:google-cloud-language:1.24.1'
    // For live reloading templates
    dev("org.springframework.boot:spring-boot-devtools")
}

task serveApp(type:Exec) {
    workingDir '.'
    commandLine 'java', '-jar', '.\\build\\libs\\intellinote-0.1.0.jar'
}

//Add to task stage that Heroku to prepare deployment
task run(dependsOn: ['build', 'serveApp'])

serveApp.mustRunAfter build

task stage(dependsOn: ['build', 'clean'])

build.mustRunAfter clean

bootRun {
    // Use Spring Boot DevTool only when we run Gradle bootRun task
    classpath = sourceSets.main.runtimeClasspath + configurations.dev
}
